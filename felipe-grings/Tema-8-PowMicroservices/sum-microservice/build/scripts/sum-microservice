#!/usr/bin/env sh

##############################################################################
##
##  sum-microservice start up script for UN*X
##
##############################################################################

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done
SAVED="`pwd`"
cd "`dirname \"$PRG\"`/.." >/dev/null
APP_HOME="`pwd -P`"
cd "$SAVED" >/dev/null

APP_NAME="sum-microservice"
APP_BASE_NAME=`basename "$0"`

# Add default JVM options here. You can also use JAVA_OPTS and SUM_MICROSERVICE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS='"-Djava.net.preferIPv4Stack=true" "-Djava.net.preferIPv6Addresses=false" "-server" "-Xmx2048m" "-Xms128m"'

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

warn ( ) {
    echo "$*"
}

die ( ) {
    echo
    echo "$*"
    echo
    exit 1
}

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
nonstop=false
case "`uname`" in
  CYGWIN* )
    cygwin=true
    ;;
  Darwin* )
    darwin=true
    ;;
  MINGW* )
    msys=true
    ;;
  NONSTOP* )
    nonstop=true
    ;;
esac

CLASSPATH=$APP_HOME/lib/sum-microservice-1.0.jar:$APP_HOME/lib/logback-classic-1.0.13.jar:$APP_HOME/lib/slf4j-log4j12-1.7.12.jar:$APP_HOME/lib/slf4j-jdk14-1.7.12.jar:$APP_HOME/lib/karyon2-core-2.7.2.jar:$APP_HOME/lib/karyon2-jersey-blocking-2.7.2.jar:$APP_HOME/lib/karyon2-archaius-2.7.2.jar:$APP_HOME/lib/karyon2-servo-2.7.2.jar:$APP_HOME/lib/karyon2-admin-web-2.7.2.jar:$APP_HOME/lib/karyon2-eureka-2.7.2.jar:$APP_HOME/lib/jersey-client-1.18.4.jar:$APP_HOME/lib/logback-core-1.0.13.jar:$APP_HOME/lib/log4j-1.2.17.jar:$APP_HOME/lib/rxnetty-contexts-0.4.7.jar:$APP_HOME/lib/karyon2-governator-2.7.2.jar:$APP_HOME/lib/guava-16.0.1.jar:$APP_HOME/lib/jersey-guice-1.18.1.jar:$APP_HOME/lib/jersey-servlet-1.18.1.jar:$APP_HOME/lib/jersey-server-1.18.1.jar:$APP_HOME/lib/governator-archaius-1.9.3.jar:$APP_HOME/lib/rxnetty-servo-0.4.7.jar:$APP_HOME/lib/freemarker-2.3.15.jar:$APP_HOME/lib/jackson-mapper-asl-1.9.11.jar:$APP_HOME/lib/karyon2-admin-2.7.2.jar:$APP_HOME/lib/httpclient-4.2.1.jar:$APP_HOME/lib/gson-2.1.jar:$APP_HOME/lib/eureka-client-1.1.151.jar:$APP_HOME/lib/rxjava-1.0.8.jar:$APP_HOME/lib/rxnetty-0.4.7.jar:$APP_HOME/lib/governator-1.9.3.jar:$APP_HOME/lib/javax.inject-1.jar:$APP_HOME/lib/guice-servlet-3.0.jar:$APP_HOME/lib/jackson-databind-2.4.3.jar:$APP_HOME/lib/jackson-core-asl-1.9.11.jar:$APP_HOME/lib/jsr311-api-1.1.1.jar:$APP_HOME/lib/servlet-api-2.5.jar:$APP_HOME/lib/jetty-6.1.26.jar:$APP_HOME/lib/pytheas-core-1.25.jar:$APP_HOME/lib/httpcore-4.2.1.jar:$APP_HOME/lib/commons-logging-1.1.1.jar:$APP_HOME/lib/commons-codec-1.6.jar:$APP_HOME/lib/jettison-1.2.jar:$APP_HOME/lib/netflix-eventbus-0.1.2.jar:$APP_HOME/lib/xstream-1.4.2.jar:$APP_HOME/lib/jersey-apache-client4-1.11.jar:$APP_HOME/lib/ribbon-httpclient-2.0.0.jar:$APP_HOME/lib/netty-codec-http-4.0.25.Final.jar:$APP_HOME/lib/netty-transport-native-epoll-4.0.25.Final.jar:$APP_HOME/lib/jackson-core-2.4.3.jar:$APP_HOME/lib/jetty-util-6.1.26.jar:$APP_HOME/lib/servlet-api-2.5-20081211.jar:$APP_HOME/lib/commons-collections-3.2.1.jar:$APP_HOME/lib/jersey-json-1.11.jar:$APP_HOME/lib/commons-beanutils-1.8.2.jar:$APP_HOME/lib/commons-configuration-1.8.jar:$APP_HOME/lib/high-scale-lib-1.1.2.jar:$APP_HOME/lib/annotations-2.0.0.jar:$APP_HOME/lib/commons-io-1.4.jar:$APP_HOME/lib/commons-math-2.2.jar:$APP_HOME/lib/netflix-infix-0.1.2.jar:$APP_HOME/lib/xmlpull-1.1.3.1.jar:$APP_HOME/lib/xpp3_min-1.1.4c.jar:$APP_HOME/lib/ribbon-core-2.0.0.jar:$APP_HOME/lib/ribbon-loadbalancer-2.0.0.jar:$APP_HOME/lib/netflix-commons-util-0.1.1.jar:$APP_HOME/lib/netty-codec-4.0.25.Final.jar:$APP_HOME/lib/netty-handler-4.0.25.Final.jar:$APP_HOME/lib/netty-common-4.0.25.Final.jar:$APP_HOME/lib/netty-buffer-4.0.25.Final.jar:$APP_HOME/lib/netty-transport-4.0.25.Final.jar:$APP_HOME/lib/jaxb-impl-2.2.3-1.jar:$APP_HOME/lib/jackson-jaxrs-1.9.2.jar:$APP_HOME/lib/jackson-xc-1.9.2.jar:$APP_HOME/lib/commons-lang-2.6.jar:$APP_HOME/lib/joda-time-2.3.jar:$APP_HOME/lib/commons-jxpath-1.3.jar:$APP_HOME/lib/antlr-runtime-3.4.jar:$APP_HOME/lib/netflix-statistics-0.1.1.jar:$APP_HOME/lib/jaxb-api-2.2.2.jar:$APP_HOME/lib/aopalliance-1.0.jar:$APP_HOME/lib/stringtemplate-3.2.1.jar:$APP_HOME/lib/antlr-2.7.7.jar:$APP_HOME/lib/stax-api-1.0-2.jar:$APP_HOME/lib/activation-1.1.jar:$APP_HOME/lib/slf4j-api-1.7.12.jar:$APP_HOME/lib/archaius-core-0.7.2.jar:$APP_HOME/lib/jersey-core-1.18.4.jar:$APP_HOME/lib/servo-core-0.8.3.jar:$APP_HOME/lib/servo-internal-0.8.3.jar:$APP_HOME/lib/governator-annotations-1.9.3.jar:$APP_HOME/lib/governator-core-1.9.3.jar:$APP_HOME/lib/hibernate-validator-4.1.0.Final.jar:$APP_HOME/lib/asm-5.0.4.jar:$APP_HOME/lib/guice-multibindings-4.0.jar:$APP_HOME/lib/guice-grapher-4.0.jar:$APP_HOME/lib/validation-api-1.0.0.GA.jar:$APP_HOME/lib/guice-assistedinject-4.0.jar:$APP_HOME/lib/stax-api-1.0.1.jar:$APP_HOME/lib/jackson-annotations-2.4.3.jar:$APP_HOME/lib/guice-4.0.jar

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD="$JAVA_HOME/jre/sh/java"
    else
        JAVACMD="$JAVA_HOME/bin/java"
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD="java"
    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
fi

# Increase the maximum file descriptors if we can.
if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
    MAX_FD_LIMIT=`ulimit -H -n`
    if [ $? -eq 0 ] ; then
        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
            MAX_FD="$MAX_FD_LIMIT"
        fi
        ulimit -n $MAX_FD
        if [ $? -ne 0 ] ; then
            warn "Could not set maximum file descriptor limit: $MAX_FD"
        fi
    else
        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
    fi
fi

# For Darwin, add options to specify how the application appears in the dock
if $darwin; then
    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
fi

# For Cygwin, switch paths to Windows format before running java
if $cygwin ; then
    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
    JAVACMD=`cygpath --unix "$JAVACMD"`

    # We build the pattern for arguments to be converted via cygpath
    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
    SEP=""
    for dir in $ROOTDIRSRAW ; do
        ROOTDIRS="$ROOTDIRS$SEP$dir"
        SEP="|"
    done
    OURCYGPATTERN="(^($ROOTDIRS))"
    # Add a user-defined pattern to the cygpath arguments
    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
    fi
    # Now convert the arguments - kludge to limit ourselves to /bin/sh
    i=0
    for arg in "$@" ; do
        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option

        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
        else
            eval `echo args$i`="\"$arg\""
        fi
        i=$((i+1))
    done
    case $i in
        (0) set -- ;;
        (1) set -- "$args0" ;;
        (2) set -- "$args0" "$args1" ;;
        (3) set -- "$args0" "$args1" "$args2" ;;
        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
    esac
fi

# Escape application args
save ( ) {
    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
    echo " "
}
APP_ARGS=$(save "$@")

# Collect all arguments for the java command, following the shell quoting and substitution rules
eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $SUM_MICROSERVICE_OPTS -classpath "\"$CLASSPATH\"" com.github.diegopacheco.sandbox.java.netflixoss.karyon.ServerRunner "$APP_ARGS"

# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong
if [ "$(uname)" = "Darwin" ] && [ "$HOME" = "$PWD" ]; then
  cd "$(dirname "$0")"
fi

exec "$JAVACMD" "$@"
